package Sites;

import java.awt.Color;
import javax.swing.JOptionPane;

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Class        Add.java
 * Description  A class representing the Add JDialog
 * Date         10/26/2023     
 * @author      <i>Kirill Grichanichenko</i>           
 *****************************************************************************/
public class Add extends javax.swing.JDialog {
    
    // Class instance varaibles
    private Site mySite = null;
    private String name;
    private String country;
    private float population;
    private String capital;
    private float area;
    private final Color white = Color.WHITE; // Default background color for input textField.
    private final Color pink = Color.PINK; // Background color for bad input textField.
   
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Constructor  Add()-Default Constructor
    * Description  Creates an instance of Add JDialog form
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>           
    * @param       parent java.awt.Frame
    * @param       modal Boolean
    *****************************************************************************/
    public Add(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.getRootPane().setDefaultButton(saveJButton);
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       getSite()
    * Description  Gets the new site and returns it.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @return      mySite Site
    *****************************************************************************/
    public Site getSite()
    {
        return mySite;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJPanel = new javax.swing.JPanel();
        logoJLabel = new javax.swing.JLabel();
        titleJLabel = new javax.swing.JLabel();
        displayJPanel = new javax.swing.JPanel();
        nameJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        countryJLabel = new javax.swing.JLabel();
        countryJTextField = new javax.swing.JTextField();
        populationJLabel = new javax.swing.JLabel();
        populationJTextField = new javax.swing.JTextField();
        capitalJLabel = new javax.swing.JLabel();
        capitalJTextField = new javax.swing.JTextField();
        areaJLabel = new javax.swing.JLabel();
        areaJTextField = new javax.swing.JTextField();
        controlJPanel = new javax.swing.JPanel();
        saveJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add new Site");
        setResizable(false);

        logoJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Splash.jpeg"))); // NOI18N

        titleJLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        titleJLabel.setForeground(new java.awt.Color(255, 153, 0));
        titleJLabel.setText("Add New Site");

        javax.swing.GroupLayout titleJPanelLayout = new javax.swing.GroupLayout(titleJPanel);
        titleJPanel.setLayout(titleJPanelLayout);
        titleJPanelLayout.setHorizontalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(logoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        titleJPanelLayout.setVerticalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        displayJPanel.setLayout(new java.awt.GridLayout(5, 2, 5, 5));

        nameJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        nameJLabel.setText("Name of Site:");
        displayJPanel.add(nameJLabel);

        nameJTextField.setToolTipText("Name of Site");
        nameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(nameJTextField);

        countryJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        countryJLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        countryJLabel.setText("Country:");
        displayJPanel.add(countryJLabel);

        countryJTextField.setToolTipText("Country");
        countryJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                countryJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                countryJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(countryJTextField);

        populationJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        populationJLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        populationJLabel.setText("Population:");
        displayJPanel.add(populationJLabel);

        populationJTextField.setToolTipText("Population");
        populationJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                populationJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                populationJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(populationJTextField);

        capitalJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        capitalJLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        capitalJLabel.setText("Capital:");
        displayJPanel.add(capitalJLabel);

        capitalJTextField.setToolTipText("Capital");
        capitalJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                capitalJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                capitalJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(capitalJTextField);

        areaJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        areaJLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        areaJLabel.setText("Area:");
        displayJPanel.add(areaJLabel);

        areaJTextField.setToolTipText("Area");
        areaJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                areaJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                areaJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(areaJTextField);

        controlJPanel.setLayout(new java.awt.GridLayout(1, 5, 5, 5));

        saveJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        saveJButton.setText("Save");
        saveJButton.setToolTipText("Save");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(saveJButton);

        cancelJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancelJButton.setText("Cancel");
        cancelJButton.setToolTipText("Cancel");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(cancelJButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displayJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controlJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       cancelJButtonActionPerformed()
    * Description  An event handler that exits the JDialog
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.ActionEvent
    *****************************************************************************/
    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       saveJButtonActionPerformed()
    * Description  An event handler that saves the given information.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.ActionEvent
    *****************************************************************************/
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
       String message = "Error!";
       try
       {
           // Get name of the site and check if it is a valid name.
           name = nameJTextField.getText();
           if(!Validation.isValidName(name) || !Character.isUpperCase(name.charAt(0)))
           {
               message = "Please enter a valid name for a site.";
               nameJTextField.requestFocus();
               throw new IllegalArgumentException();
           }
           // Get country of the site and check if it is a valid country.
           country = countryJTextField.getText();
           if(!Validation.isValidName(country) || !Character.isUpperCase(country.charAt(0)))
           {
               message = "Please enter a valid country";
               countryJTextField.requestFocus();
               throw new IllegalArgumentException();
           }
           population = Float.parseFloat(populationJTextField.getText());
           // Get the population and check if it is a valid population
           if(!Validation.isNumeric(populationJTextField.getText()) || Float.parseFloat(populationJTextField.getText()) < 0
                   || Float.parseFloat(populationJTextField.getText()) > 1500000000)
           {
               message = "Please enter a valid population";
               populationJTextField.requestFocus();
               throw new IllegalArgumentException();
           }
           capital = capitalJTextField.getText();
           if(!Validation.isValidName(capital) || !Character.isUpperCase(capital.charAt(0)))
           {
               message = "Please enter a valid capital for the site";
               capitalJTextField.requestFocus();
               throw new IllegalArgumentException();
           }
           area = Float.parseFloat(areaJTextField.getText());
           if(!Validation.isNumeric(areaJTextField.getText()) || Float.parseFloat(areaJTextField.getText()) <= 0
                   || Float.parseFloat(areaJTextField.getText()) > 58000000)
           {
               message = "Please enter a valid area";
               areaJTextField.requestFocus();
               throw new IllegalArgumentException();
           }
           mySite = new Site(0, name, country, population, capital, area);
           
           // Close the form.
           this.dispose();  
       }
       catch(IllegalArgumentException exp)
       {
           JOptionPane.showMessageDialog(null, message, "Invalid Input", JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_saveJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       nameJTextFieldFocusGained()
    * Description  An event handler that selects the nameJTextField.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void nameJTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameJTextFieldFocusGained
        nameJTextField.selectAll();
    }//GEN-LAST:event_nameJTextFieldFocusGained

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       nameJTextFieldFocusLost()
    * Description  An event handler that checks the validation of the name.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void nameJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameJTextFieldFocusLost
        String input = nameJTextField.getText();
        if(Validation.isValidName(input) && Character.isUpperCase(input.charAt(0)))
            nameJTextField.setBackground(white);
        else
            nameJTextField.setBackground(pink);
    }//GEN-LAST:event_nameJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       countryJTextFieldFocusGained()
    * Description  An event handler that selects the countryJTextField.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void countryJTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countryJTextFieldFocusGained
        countryJTextField.selectAll();
    }//GEN-LAST:event_countryJTextFieldFocusGained

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       countryJTextFieldFocusLost()
    * Description  An event handler that checks the validation of the country.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void countryJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countryJTextFieldFocusLost
        String input = countryJTextField.getText();
        if(Validation.isValidName(input) && Character.isUpperCase(input.charAt(0)))
            countryJTextField.setBackground(white);
        else
            countryJTextField.setBackground(pink);
    }//GEN-LAST:event_countryJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       populationJTextFieldFocusGained()
    * Description  An event handler that selects the populationJTextField.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void populationJTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_populationJTextFieldFocusGained
        populationJTextField.selectAll();
    }//GEN-LAST:event_populationJTextFieldFocusGained

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       populationJTextFieldFocusLost()
    * Description  An event handler that checks the validation of the population.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void populationJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_populationJTextFieldFocusLost
        String input = populationJTextField.getText();
        if(Validation.isNumeric(input) && Float.parseFloat(populationJTextField.getText()) >= 0
                && Float.parseFloat(populationJTextField.getText()) < 1500000000)
            populationJTextField.setBackground(white);
        else
            populationJTextField.setBackground(pink);
    }//GEN-LAST:event_populationJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       capitalJTextFieldFocusGained()
    * Description  An event handler that selects the capitalJTextField.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void capitalJTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_capitalJTextFieldFocusGained
        capitalJTextField.selectAll();
    }//GEN-LAST:event_capitalJTextFieldFocusGained

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       capitalJTextFieldFocusLost()
    * Description  An event handler that checks the validation of the capital.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void capitalJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_capitalJTextFieldFocusLost
        String input = capitalJTextField.getText();
        if(Validation.isValidName(input) && Character.isUpperCase(input.charAt(0)))
            capitalJTextField.setBackground(white);
        else
            capitalJTextField.setBackground(pink);
    }//GEN-LAST:event_capitalJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       areaJTextFieldFocusGained()
    * Description  An event handler that selects the areaJTextField.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void areaJTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_areaJTextFieldFocusGained
        areaJTextField.selectAll();
    }//GEN-LAST:event_areaJTextFieldFocusGained

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    * Method       areaJTextFieldFocusLost()
    * Description  An event handler that checks the validation of the area.
    * Date         10/26/2023     
    * @author      <i>Kirill Grichanichenko</i>
    * @param       evt java.awt.event.FocusEvent
    *****************************************************************************/
    private void areaJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_areaJTextFieldFocusLost
        String input = areaJTextField.getText();
        if(Validation.isNumeric(input) && Float.parseFloat(areaJTextField.getText()) > 0 
                && Float.parseFloat(areaJTextField.getText()) < 58000000)
            areaJTextField.setBackground(white);
        else
            areaJTextField.setBackground(pink);
    }//GEN-LAST:event_areaJTextFieldFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel areaJLabel;
    private javax.swing.JTextField areaJTextField;
    private javax.swing.JButton cancelJButton;
    private javax.swing.JLabel capitalJLabel;
    private javax.swing.JTextField capitalJTextField;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JLabel countryJLabel;
    private javax.swing.JTextField countryJTextField;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JLabel logoJLabel;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JLabel populationJLabel;
    private javax.swing.JTextField populationJTextField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JPanel titleJPanel;
    // End of variables declaration//GEN-END:variables
}
